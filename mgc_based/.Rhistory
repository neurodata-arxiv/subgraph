matrix(0,3,3,3)
n=10;
per=sample(n,replace=TRUE);
perN=sample(n);
perN=per(perN);
perN=per[perN];
load("C:/Work/Applications/R/data/BNU_1output.RData")
View(dataset)
dname <- "http://www.cis.jhu.edu/~parky/CGP/Data/time_series_cc200_20130402/"
urlfiles <- readHTMLTable(dname,skip.rows=1:2)[[1]]$V2
urlfiles <- urlfiles[!is.na(urlfiles)]
files <- paste0(dname,urlfiles)
(n <- length(files)) # 42
require(flexmix)
coh <- ts <- spect <- spect_norm <- NULL
for (i in 1:length(files)) {
ts[[i]] <- readMat(files[i])[[1]] # 194 x 197
spect[[i]] <- spectrum(t(ts[[i]]))$spec[6:40,] # 100 (freq) x 194 => (bandpass) 35 x 194
spect_norm[[i]] <- scale(spect[[i]],center=FALSE,scale=colSums(spect[[i]])) # normalization
coh[[i]] <- KLdiv(spect_norm[[i]]) # Delta: 194 x 194
}
remove
rm(list = ls())
load("C:/Work/Applications/R/data/BNU_2output.RData")
load("C:/Work/Applications/R/data/KKI21output.RData")
load("C:/Work/Applications/R/data/BNU_1output.RData")
View(dataset)
library(R.matlab)
fibergraph <- read.table("C:/Work/Applications/Data/Semipar/fibergraph.Rbin", quote="\"")
View(fibergraph)
View(fibergraph)
View(fibergraph)
View(fibergraph)
View(fibergraph)
View(fibergraph)
writeMat("migrain.mat",list=fibergraph.V1);
writeMat("migrain.mat",list=fibergraph);
fibergraph <- read.table("C:/Work/Applications/Data/Semipar/fibergraph.Rbin", quote="\"")
View(fibergraph)
fibergraph.m2g <- read.table("C:/Work/Applications/Data/Semipar/fibergraph-m2g.Rbin", quote="\"")
View(fibergraph.m2g)
writeMat("m2g.mat",list=fibergraph.m2g);
library(R.matlab)
fibergraph <- read.table("C:/Work/Applications/Data/Semipar/fibergraph.Rbin", quote="\"")
View(fibergraph)
fibergraph.V1
View(fibergraph)
m2g <- read.csv("C:/Work/Applications/Data/m2g.mat", header=FALSE)
View(m2g)
View(m2g)
View(fibergraph)
fibergraph.V1
fibergraph$V1
fibergraph.list[1]
fibergraph[1]
fibergraph$list[1]
fibergraph$list
fibergraph$V1
fibergraph[1]
fibergraph[2]
fibergraph <- read.table("C:/Work/Applications/Data/Semipar/fibergraph.Rbin", quote="\"")
View(fibergraph)
fibergraph.list
fibergraph$list
fibergraph$V1
fibergraph <- read.table("C:/Work/Applications/Data/Semipar/fibergraph.Rbin", quote="\"")
View(fibergraph)
load("C:/Work/Applications/GitHub/MGC/Data/Preprocessed/BrainCPData.RData")
setwd("C:/Work/Applications/GitHub/MGC/Code/R")
library(ecodist)
library(energy)
library(HHG)
source("MGCLocalCorr.R")
library(ecodist)
library(energy)
library(HHG)
C=distC;P=distP;ind=723;
ldcorr=MGCLocalCorr(C,P,option='dcor')$corr;
lmdcorr=MGCLocalCorr(C,P,option='mcor')$corr;
weight=MGCLocalCorr(C,P,option='mcor',ind);
lmantel=MGCLocalCorr(C,P,option='mantel')$corr;
dcorr=dcor(as.dist(C),as.dist(P));
mdcorr=dcor.ttest(C,P,distance=TRUE);
ldcorr[42,42]
lmdcorr[42,42]
View(lmdcorr)
install.packages("ecodist")
install.packages("energy")
install.packages("HHG")
setwd("~/git/subgraph/mgc_based/")
listGs<- list.files(path = "../graphml/", pattern = "*.graphml")
covariates<- read.csv("./covariates/predictors.csv",stringsAsFactors = F)
covariates<- read.csv("./covariates/predictors.csv",stringsAsFactors = F)
covariates<- read.csv("../covariates/predictors.csv",stringsAsFactors = F)
ids <- unlist( lapply(listGs,function(x)strtrim(x,6)))
common_id<- intersect(covariates$RUNNO , ids)
covariates <- covariates[covariates$RUNNO%in%common_id,]
covariates <- covariates[order(covariates$RUNNO),]
listGs<- listGs[ids%in%common_id]
listGs<- listGs[order(listGs)]
graphList<- lapply(listGs, function(x){
read.graph( file = paste("./graphml/",x,sep = ""),format = "graphml")
})
AdjacencyList<- lapply(graphList, function(x){
get.adjacency(x)
})
HemisphereList<- lapply(graphList, function(x){
get.vertex.attribute(x,name="hemisphere")
})
DegreeList<- lapply(AdjacencyList, function(x){
rowSums(as.matrix(x))
})
